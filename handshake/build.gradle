buildscript {

    ext {
        springIOVersion = '2.2.4.RELEASE'
        springPluginVersion = '1.0.9.RELEASE'
    }

    repositories {
        parent.repositories.forEach({ repository ->
            if (repository instanceof MavenArtifactRepository) {
                maven {
                    url repository.url.toString()
                }
            }
        })
        maven { url "http://repo.spring.io/release" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:${springPluginVersion}"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springIOVersion}"
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation('com.google.code.gson:gson:2.8.6')
    implementation project(':compiler')
    implementation('com.google.zxing:core:3.4.0')
    implementation("org.springframework.boot:spring-boot-starter:${springIOVersion}")
    implementation("org.springframework.boot:spring-boot-starter-web:${springIOVersion}"){
        exclude group: "org.springframework.boot", module: "spring-boot-starter-json"
    }
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}")
    implementation("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
    testImplementation("org.springframework.boot:spring-boot-starter-test:${springIOVersion}") {
        exclude group: "org.junit.vintage", module: "junit-vintage-engine"
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8
